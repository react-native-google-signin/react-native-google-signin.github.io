"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[751],{6023:(e,n,t)=>{t.d(n,{Z:()=>s});t(7294);var i=t(6905);const o={tabItem:"tabItem_Ymn6"};var r=t(5893);function s(e){let{children:n,hidden:t,className:s}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.Z)(o.tabItem,s),hidden:t,children:n})}},5487:(e,n,t)=>{t.d(n,{Z:()=>w});var i=t(7294),o=t(6905),r=t(1085),s=t(6550),l=t(9266),a=t(1994),c=t(4879),d=t(267);function u(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:i,default:o}}=e;return{value:n,label:t,attributes:i,default:o}}))}(t);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const o=(0,s.k6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,a._X)(r),(0,i.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(o.location.search);n.set(r,e),o.replace({...o.location,search:n.toString()})}),[r,o])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:o}=e,r=h(e),[s,a]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=t.find((e=>e.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:r}))),[c,u]=g({queryString:t,groupId:o}),[f,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[o,r]=(0,d.Nk)(t);return[o,(0,i.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:o}),m=(()=>{const e=c??f;return p({value:e,tabValues:r})?e:null})();(0,l.Z)((()=>{m&&a(m)}),[m]);return{selectedValue:s,selectValue:(0,i.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);a(e),u(e),b(e)}),[u,b,r]),tabValues:r}}var b=t(5074);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(5893);function j(e){let{className:n,block:t,selectedValue:i,selectValue:s,tabValues:l}=e;const a=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.o5)(),d=e=>{const n=e.currentTarget,t=a.indexOf(n),o=l[t].value;o!==i&&(c(n),s(o))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=a.indexOf(e.currentTarget)+1;n=a[t]??a[0];break}case"ArrowLeft":{const t=a.indexOf(e.currentTarget)-1;n=a[t]??a[a.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>a.push(e),onKeyDown:u,onClick:d,...r,className:(0,o.Z)("tabs__item",m.tabItem,r?.className,{"tabs__item--active":i===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:o}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===o));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==o})))})}function y(e){const n=f(e);return(0,x.jsxs)("div",{className:(0,o.Z)("tabs-container",m.tabList),children:[(0,x.jsx)(j,{...n,...e}),(0,x.jsx)(v,{...n,...e})]})}function w(e){const n=(0,b.Z)();return(0,x.jsx)(y,{...e,children:u(e.children)},String(n))}},9251:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>c,toc:()=>u});var i=t(5893),o=t(1151),r=t(5487),s=t(6023);const l={sidebar_position:15},a="Obtaining configuration information",c={id:"setting-up/get-config-file",title:"Obtaining configuration information",description:"Please note that you do not need Firebase to configure Google Sign In. However, if you use it, it's a little easier to set up the sign in experience because Firebase gives you one file to download and put into your project.",source:"@site/docs/setting-up/get-config-file.mdx",sourceDirName:"setting-up",slug:"/setting-up/get-config-file",permalink:"/docs/setting-up/get-config-file",draft:!1,unlisted:!1,editUrl:"https://github.com/react-native-google-signin/docs/edit/main/docs/setting-up/get-config-file.mdx",tags:[],version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15},sidebar:"tutorialSidebar",previous:{title:"iOS setup guide",permalink:"/docs/setting-up/ios"},next:{title:"One-tap Google sign in",permalink:"/docs/one-tap"}},d={},u=[{value:"Android",id:"android",level:2},{value:"Obtain SHA-1 certificate fingerprints",id:"obtain-sha-1-certificate-fingerprints",level:3},{value:"Add SHA-1 to Firebase or Google Cloud Console",id:"add-sha-1-to-firebase-or-google-cloud-console",level:3},{value:"iOS",id:"ios",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"obtaining-configuration-information",children:"Obtaining configuration information"}),"\n",(0,i.jsxs)(n.p,{children:["Please note that you ",(0,i.jsx)(n.strong,{children:"do not"})," need Firebase to configure Google Sign In. However, if you use it, it's a little easier to set up the sign in experience because Firebase gives you one file to download and put into your project."]}),"\n",(0,i.jsx)(n.h2,{id:"android",children:"Android"}),"\n",(0,i.jsx)(n.p,{children:"Read below on how to set up Google Sign In for your Android app."}),"\n",(0,i.jsx)(n.h3,{id:"obtain-sha-1-certificate-fingerprints",children:"Obtain SHA-1 certificate fingerprints"}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["This is crucial for Google Sign-In to work on Android. If not done correctly, you will get the infamous ",(0,i.jsxs)(n.a,{href:"/docs/troubleshooting#developer_error",children:[(0,i.jsx)(n.code,{children:"DEVELOPER_ERROR"})," error"]}),"."]})}),"\n",(0,i.jsxs)(n.p,{children:["You likely have multiple signing configurations - for example for building local debug and release APKs, builds on ",(0,i.jsx)(n.a,{href:"https://docs.expo.dev/app-signing/managed-credentials/#inspecting-credentials-configuration",children:"Expo EAS"}),", and ",(0,i.jsx)(n.a,{href:"https://support.google.com/googleplay/android-developer/answer/9842756?hl=en",children:"Play App Signing"})," for production deployments. You will need to get the SHA1 certificate fingerprints\nfor ",(0,i.jsx)(n.em,{children:"all"})," keystores you intend to use and enter them ",(0,i.jsx)(n.em,{children:"all"})," in Firebase or Google Cloud Console."]}),"\n","\n",(0,i.jsxs)(r.Z,{children:[(0,i.jsx)(s.Z,{value:"eas",label:"When using Expo EAS",children:(0,i.jsxs)(n.p,{children:["If you're using Expo EAS, read ",(0,i.jsx)(n.a,{href:"https://docs.expo.dev/app-signing/managed-credentials/#inspecting-credentials-configuration",children:"credentials docs"})," to learn how to obtain information about how your app is signed with EAS."]})}),(0,i.jsx)(s.Z,{value:"local",label:"When developing locally",children:(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["From your project root, ",(0,i.jsx)(n.code,{children:"cd android && ./gradlew signingReport"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Scroll to the top of output, see the fingerprints. Debug fingerprint is used in dev,\nrelease fingerprint is used for release APK."}),"\n"]})}),(0,i.jsxs)(s.Z,{value:"playStore",label:"When releasing via Google Play Store",children:[(0,i.jsxs)(n.p,{children:['Check if "Google Play App Signing" is enabled for your app ',(0,i.jsx)(n.a,{href:"https://play.google.com/console/u/0/",children:"in the console"}),'.\nIf it is enabled, you need to obtain the "App signing certificate" ',(0,i.jsx)(n.code,{children:"SHA-1"}),"."]}),(0,i.jsxs)(n.p,{children:["You can find it at: App -> Release (in the left sidebar) -> Setup -> App integrity. Under the App signing key certificate, copy ",(0,i.jsx)(n.code,{children:"SHA-1 certificate fingerprint"}),"."]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"add-sha-1-to-firebase-or-google-cloud-console",children:"Add SHA-1 to Firebase or Google Cloud Console"}),"\n",(0,i.jsxs)(r.Z,{children:[(0,i.jsxs)(s.Z,{value:"firebase",label:"When using Firebase",children:[(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Sign in to Firebase and open your project."}),"\n",(0,i.jsx)(n.li,{children:"Click the Settings icon and select Project settings."}),"\n",(0,i.jsx)(n.li,{children:'In the "Your apps" card, select the app you need to add SHA1 to.'}),"\n",(0,i.jsx)(n.li,{children:'Click "Add fingerprint".'}),"\n",(0,i.jsx)(n.li,{children:'Check that "Package name" is correct.'}),"\n",(0,i.jsxs)(n.li,{children:["Download the ",(0,i.jsx)(n.code,{children:"google-services.json"})," file."]}),"\n"]}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Firebase, add Android keystore&#39;s SHA1 to your project",src:t(4505).Z+"",width:"1928",height:"1296"})})]}),(0,i.jsx)(s.Z,{value:"cloud-console",label:"When not using Firebase",children:(0,i.jsxs)(n.p,{children:['Follow the "To create an OAuth 2.0 client ID in the console" instructions\n',(0,i.jsx)(n.a,{href:"https://support.google.com/cloud/answer/6158849?hl=en",children:"here"}),"."]})})]}),"\n",(0,i.jsx)(n.h2,{id:"ios",children:"iOS"}),"\n",(0,i.jsx)(n.p,{children:"Read below on how to set up Google Sign In for your iOS app."}),"\n",(0,i.jsxs)(r.Z,{children:[(0,i.jsx)(s.Z,{value:"firebase",label:"When using Firebase",children:(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Sign in to Firebase and open your project."}),"\n",(0,i.jsx)(n.li,{children:"Click the Settings icon and select Project settings."}),"\n",(0,i.jsx)(n.li,{children:'In the "Your apps" card, select the app.'}),"\n",(0,i.jsx)(n.li,{children:'Check that "Bundle ID" is correct.'}),"\n",(0,i.jsxs)(n.li,{children:["Download the ",(0,i.jsx)(n.code,{children:"GoogleService-Info.plist"})," file."]}),"\n"]})}),(0,i.jsxs)(s.Z,{value:"cloud-console",label:"When not using Firebase",children:[(0,i.jsxs)(n.p,{children:["You need to obtain the ",(0,i.jsx)(n.code,{children:"reversed client id"}),"."]}),(0,i.jsxs)(n.p,{children:["Follow the instructions at ",(0,i.jsx)(n.a,{href:"https://developers.google.com/identity/sign-in/ios/start-integrating#get_an_oauth_client_id",children:'"Get an OAuth client ID"'}),", ",(0,i.jsx)(n.a,{href:"https://developers.google.com/identity/sign-in/ios/start-integrating#server_client_id",children:'"Get an OAuth server client ID"'})," and then ",(0,i.jsx)(n.a,{href:"https://developers.google.com/identity/sign-in/ios/start-integrating#configure_app_project",children:'"Configure your application project"'}),"."]}),(0,i.jsxs)(n.p,{children:["When done configuring your project (check you selected the correct project in the console), take note of Web Client ID which you may need later. It can be found ",(0,i.jsx)(n.a,{href:"https://console.developers.google.com/apis/credentials",children:"here"}),".\nThe Client IDs are under the OAuth section."]})]})]})]})}function p(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},4505:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/android-fingerprint-firebase-5381019c8870df86888cdc8bb082d603.png"},1151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>s});var i=t(7294);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);