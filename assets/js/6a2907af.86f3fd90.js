"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[920],{3804:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>p,toc:()=>c});var i=o(5893),t=o(1151);const s={sidebar_position:1},r="Expo setup",p={id:"setting-up/expo",title:"Expo setup",description:"Prepare your Expo project",source:"@site/docs/setting-up/expo.md",sourceDirName:"setting-up",slug:"/setting-up/expo",permalink:"/docs/setting-up/expo",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Setting up",permalink:"/docs/category/setting-up"},next:{title:"Web setup guide",permalink:"/docs/setting-up/web"}},a={},c=[{value:"Prepare your Expo project",id:"prepare-your-expo-project",level:3},{value:"Expo without Firebase",id:"expo-without-firebase",level:4},{value:"Expo and Firebase",id:"expo-and-firebase",level:4},{value:"Rebuilding the app",id:"rebuilding-the-app",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"expo-setup",children:"Expo setup"}),"\n",(0,i.jsx)(n.h3,{id:"prepare-your-expo-project",children:"Prepare your Expo project"}),"\n",(0,i.jsxs)(n.admonition,{type:"warning",children:[(0,i.jsxs)(n.p,{children:['This package cannot be used in the "Expo Go" app because ',(0,i.jsx)(n.a,{href:"https://docs.expo.io/workflow/customizing/",children:"it requires custom native code"}),". However, you can add custom native code to expo by following the guide below."]}),(0,i.jsxs)(n.p,{children:["Read Expo's ",(0,i.jsx)(n.a,{href:"https://docs.expo.io/workflow/customizing/",children:'"Adding custom native code"'})," guide for detailed information."]})]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"With Expo SDK 50, minimum iOS version was bumped to 13.4. If unsure, please consult release notes to determine the right version of this package to install."})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"npx expo install @react-native-google-signin/google-signin\n"})}),"\n",(0,i.jsxs)(n.p,{children:["After installing this npm package, add the provided ",(0,i.jsx)(n.a,{href:"https://docs.expo.io/guides/config-plugins/",children:"config plugin"})," to the ",(0,i.jsx)(n.a,{href:"https://docs.expo.io/versions/latest/config/app/#plugins",children:(0,i.jsx)(n.code,{children:"plugins"})})," array of your ",(0,i.jsx)(n.code,{children:"app.json"})," or ",(0,i.jsx)(n.code,{children:"app.config.js"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"expo-without-firebase",children:"Expo without Firebase"}),"\n",(0,i.jsxs)(n.p,{children:["If you're ",(0,i.jsx)(n.em,{children:"not"})," using Firebase, provide the ",(0,i.jsx)(n.code,{children:"iosUrlScheme"})," option to the config plugin."]}),"\n",(0,i.jsxs)(n.p,{children:["To obtain ",(0,i.jsx)(n.code,{children:"iosUrlScheme"}),", go to the ",(0,i.jsx)(n.a,{href:"https://console.cloud.google.com/apis/credentials",children:"Google Cloud Console"}),' and copy the "iOS URL scheme" from your iOS client in the "OAuth 2.0 Client IDs" section. Note that the config plugin that works without Firebase is only ',(0,i.jsx)(n.a,{href:"/docs/install#accessing-the-new-package-for-sponsors",children:"available to sponsors"})," of this module."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="app.json"',children:'{\n  "expo": {\n    "plugins": [\n      [\n        "@react-native-google-signin/google-signin",\n        {\n          "iosUrlScheme": "com.googleusercontent.apps._some_id_here_"\n        }\n      ]\n    ]\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"expo-and-firebase",children:"Expo and Firebase"}),"\n",(0,i.jsxs)(n.p,{children:["With Firebase, ",(0,i.jsx)(n.a,{href:"./get-config-file",children:"obtain the config file"})," and place it into your project. Then specify the path to the file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="app.json"',children:'{\n  "expo": {\n    "plugins": ["@react-native-google-signin/google-signin"],\n    "android": {\n      "googleServicesFile": "./google-services.json"\n    },\n    "ios": {\n      "googleServicesFile": "./GoogleService-Info.plist"\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"rebuilding-the-app",children:"Rebuilding the app"}),"\n",(0,i.jsx)(n.p,{children:"Then run the following to generate the native project directories."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"npx expo prebuild --clean\n"})}),"\n",(0,i.jsx)(n.p,{children:"Next, rebuild your app and you're good to go!"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"npx expo run:android && npx expo run:ios\n"})})]})}function d(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},1151:(e,n,o)=>{o.d(n,{Z:()=>p,a:()=>r});var i=o(7294);const t={},s=i.createContext(t);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function p(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);