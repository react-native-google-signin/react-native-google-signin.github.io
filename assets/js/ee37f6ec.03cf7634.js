"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[595],{868:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>c});var i=o(5893),s=o(1151);const t={sidebar_position:30,sidebar_class_name:"sponsor-heart"},r="One-tap Google sign in",a={id:"one-tap",title:"One-tap Google sign in",description:"This is the easiest and recommended way to implement Google Sign In. It is a one-tap sign in flow that requires very little user interaction, thus increasing conversions. It is available on Android, iOS and Web (with a little extra work described below).",source:"@site/docs/one-tap.md",sourceDirName:".",slug:"/one-tap",permalink:"/docs/one-tap",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30,sidebar_class_name:"sponsor-heart"},sidebar:"tutorialSidebar",previous:{title:"Obtaining configuration information",permalink:"/docs/setting-up/get-config-file"},next:{title:"Original Google sign in",permalink:"/docs/original"}},l={},c=[{value:"<code>signIn</code>",id:"signin",level:3},{value:"<code>createAccount</code>",id:"createaccount",level:3},{value:"<code>signOut</code>",id:"signout",level:3},{value:"Web support",id:"web-support",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"one-tap-google-sign-in",children:"One-tap Google sign in"}),"\n",(0,i.jsxs)(n.p,{children:["This is the easiest and recommended way to implement Google Sign In. It is a one-tap sign in flow that requires very little user interaction, thus increasing conversions. It is available on Android, iOS and Web (with a little extra work ",(0,i.jsx)(n.a,{href:"#web-support",children:"described below"}),")."]}),"\n",(0,i.jsxs)(n.p,{children:["On Android, it is built on top of the ",(0,i.jsx)(n.a,{href:"https://developers.google.com/identity/android-credential-manager",children:"Credential Manager"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["On the Web, it covers both the ",(0,i.jsx)(n.a,{href:"https://developers.google.com/identity/gsi/web/guides/offerings#one_tap",children:"One-tap"})," flow and the ",(0,i.jsx)(n.a,{href:"https://developers.google.com/identity/gsi/web/guides/offerings#sign_in_with_google_button",children:"Google Sign-In button"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["On iOS, the provided API is a wrapper of the ",(0,i.jsx)(n.a,{href:"https://developers.google.com/identity/sign-in/ios/start-integrating",children:"iOS Google Sign In SDK"}),"."]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["Please note this functionality is only available to sponsors\ufe0f. ",(0,i.jsx)(n.a,{href:"install#accessing-the-private-package-for-sponsors",children:"It takes just a few clicks to get access"})," \u2764\ufe0f."]})}),"\n",(0,i.jsxs)(n.p,{children:["Note that on iOS and Android, you can combine the one-tap methods with those one from the ",(0,i.jsx)(n.a,{href:"original",children:"Original Google Sign In"}),". To do that, use the One-tap sign in to sign in the user. Then call ",(0,i.jsx)(n.code,{children:"signInSilently()"})," and then (for example) ",(0,i.jsx)(n.code,{children:"getCurrentUser()"})," to get the current user's information."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import {\n  GoogleOneTapSignIn,\n  statusCodes,\n  type OneTapUser,\n} from '@react-native-google-signin/google-signin';\n"})}),"\n",(0,i.jsx)(n.h3,{id:"signin",children:(0,i.jsx)(n.code,{children:"signIn"})}),"\n",(0,i.jsxs)(n.p,{children:["signature: (",(0,i.jsx)(n.code,{children:"params"}),": ",(0,i.jsx)(n.a,{href:"api#onetapsigninparams",children:(0,i.jsx)(n.code,{children:"OneTapSignInParams"})}),") => ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"api#onetapuser",children:(0,i.jsx)(n.code,{children:"OneTapUser"})}),">"]}),"\n",(0,i.jsxs)(n.p,{children:["Attempts to sign in user automatically as explained ",(0,i.jsx)(n.a,{href:"https://developers.google.com/android/reference/com/google/android/gms/auth/api/identity/BeginSignInRequest.Builder#setAutoSelectEnabled(boolean)",children:"here"}),". On the web, this call rejects - please ",(0,i.jsx)(n.a,{href:"#web-support",children:"read below"})," for web support."]}),"\n",(0,i.jsxs)(n.p,{children:["Returns a ",(0,i.jsx)(n.code,{children:"Promise"})," that resolves with an object containing the user data or rejects in case of error. If there is no user that previously signed in, the promise will reject with ",(0,i.jsx)(n.a,{href:"http://localhost:3000/docs/errors#one-tap-specific-errors",children:(0,i.jsx)(n.code,{children:"NO_SAVED_CREDENTIAL_FOUND"})})," error. In that case, you can call ",(0,i.jsx)(n.a,{href:"one-tap#createaccount",children:(0,i.jsx)(n.code,{children:"createAccount"})})," to start a flow to create a new account."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import {\n  GoogleOneTapSignIn,\n  statusCodes,\n} from '@react-native-google-signin/google-signin';\n\n// Somewhere in your code\nsignIn = async () => {\n  try {\n    const userInfo = await GoogleOneTapSignIn.signIn({\n      webClientId: config.webClientId,\n      iosClientId: config.iosClientId, // only needed if you're not using Firebase config file\n      nonce: 'your_nonce',\n    });\n    setState({ userInfo });\n  } catch (error) {\n    if (isErrorWithCode(error)) {\n      switch (error.code) {\n        case statusCodes.NO_SAVED_CREDENTIAL_FOUND:\n          // no saved credential found, try creating an account\n          break;\n        case statusCodes.SIGN_IN_CANCELLED:\n          // sign in was cancelled\n          break;\n        case statusCodes.ONE_TAP_START_FAILED:\n          // Android and Web only, you probably have hit rate limiting. You can still call the original Google Sign In API in this case.\n          break;\n        default:\n        // something else happened\n      }\n    } else {\n      // an error that's not related to google sign in occurred\n    }\n  }\n};\n"})}),"\n",(0,i.jsx)(n.h3,{id:"createaccount",children:(0,i.jsx)(n.code,{children:"createAccount"})}),"\n",(0,i.jsxs)(n.p,{children:["signature: (",(0,i.jsx)(n.code,{children:"params"}),": ",(0,i.jsx)(n.a,{href:"api#onetapsigninparams",children:(0,i.jsx)(n.code,{children:"OneTapSignInParams"})}),") => ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.a,{href:"api#onetapuser",children:(0,i.jsx)(n.code,{children:"OneTapUser"})}),">"]}),"\n",(0,i.jsxs)(n.p,{children:["Starts a flow to create a user account. It offers a list of user accounts to choose from (When multiple Google accounts are logged in on the device). Also, it can be used if ",(0,i.jsx)(n.code,{children:"signIn"})," rejects with ",(0,i.jsx)(n.code,{children:"NO_SAVED_CREDENTIAL_FOUND"})," error, as shown in the code snippet above."]}),"\n",(0,i.jsxs)(n.p,{children:["Returns a ",(0,i.jsx)(n.code,{children:"Promise"})," that resolves with an object containing the user data or rejects in case of error. On the web, this call rejects - please ",(0,i.jsx)(n.a,{href:"#web-support",children:"read below"})," for web support."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"await GoogleOneTapSignIn.createAccount({\n  webClientId: config.webClientId,\n  nonce: 'your_nonce',\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"signout",children:(0,i.jsx)(n.code,{children:"signOut"})}),"\n",(0,i.jsxs)(n.p,{children:["signature: (",(0,i.jsx)(n.code,{children:"emailOrUniqueId"}),": ",(0,i.jsx)(n.code,{children:"string"}),") => ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"null"}),">"]}),"\n",(0,i.jsxs)(n.p,{children:["Signs out the current user. On the web, you need to provide the ",(0,i.jsx)(n.code,{children:"id"})," or email of the user. On Android and iOS, this parameter does not have any effect."]}),"\n",(0,i.jsxs)(n.p,{children:["Returns a Promise that resolves with ",(0,i.jsx)(n.code,{children:"null"})," or rejects in case of error."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"await GoogleOneTapSignIn.signOut(user.id);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"web-support",children:"Web support"}),"\n",(0,i.jsx)(n.p,{children:"Providing a unified API for the web is a bit more complex than it may seem. This is because the web experience is quite different from the mobile one, and so are the underlying apis."}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"WebGoogleOneTapSignIn.signIn"})," function exists to handle the web-specific logic. Its interface is as close as possible to the native one, allowing to reuse the logic for both success and error handling across all platforms."]}),"\n",(0,i.jsx)(n.p,{children:"To implement web support, follow these steps:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Call ",(0,i.jsx)(n.code,{children:"WebGoogleOneTapSignIn.signIn"})," upon page load. This will attempt to present the One-tap UI. It also sets up a listener for authentication events and calls the ",(0,i.jsx)(n.code,{children:"onSuccess"})," callback when the user signs in (either with One-tap flow or the Sign-In button)."]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["You should display the One Tap UI on page load or other window events, instead of it being displayed by a user action (e.g. a button press). Otherwise, you may get a broken UX. Users may not see any UI after a user action, due to ",(0,i.jsx)(n.a,{href:"https://developers.google.com/identity/gsi/web/guides/features#globally_opt_out",children:"globally opt-out"}),", ",(0,i.jsx)(n.a,{href:"https://developers.google.com/identity/gsi/web/guides/features#exponential_cooldown",children:"cool-down"}),", or no Google session."]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"useEffect(() => {\n  if (Platform.OS === 'web') {\n    WebGoogleOneTapSignIn.signIn(\n      {\n        webClientId: config.webClientId,\n      },\n      {\n        onError: (error: NativeModuleError) => {\n          // this might be cancellation, one-tap rate limiting, or other errors\n        },\n        onSuccess: (userInfo: OneTapUser) => {\n          // user has signed in, do something with the user info\n        },\n        momentListener: (moment) => {\n          // optional\n        },\n      },\n    );\n  }\n}, []);\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Optionally, you can provide a ",(0,i.jsx)(n.code,{children:"momentListener"})," callback function. The callback is called when important events take place. ",(0,i.jsx)(n.a,{href:"https://developers.google.com/identity/gsi/web/reference/js-reference#PromptMomentNotification",children:"See reference."})]}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:["Render the ",(0,i.jsx)(n.a,{href:"/docs/buttons/web",children:(0,i.jsx)(n.code,{children:"WebGoogleSigninButton"})})," component"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["One-tap UI may not always be available: This happens if user has ",(0,i.jsx)(n.a,{href:"https://developers.google.com/identity/gsi/web/guides/features#globally_opt_out",children:"opted out"})," or when they cancel the dialog several times in a row, entering the ",(0,i.jsx)(n.a,{href:"https://developers.google.com/identity/gsi/web/guides/features#exponential_cooldown",children:"cooldown period"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"WebGoogleSigninButton"})," serves as a fallback. Tapping it will open the regular Google Sign-In dialog. When user signs in, the ",(0,i.jsx)(n.code,{children:"onSuccess"})," callback will be called."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["The reason the ",(0,i.jsx)(n.code,{children:"WebGoogleOneTapSignIn.signIn"}),' api is callback-based rather than promise-based is that it\'s possible to get into an "error" state (when one-tap is not available) and then get a successful sign in from the button flow. Because of how the Google Sign In for Web SDK is done, modeling this is not possible with a promise-based api.']})})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,n,o)=>{o.d(n,{Z:()=>a,a:()=>r});var i=o(7294);const s={},t=i.createContext(s);function r(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);